//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMedAll
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Patient : object
    {
        
        private ServiceReferenceMedAll.Appointment AppointmentField;
        
        private System.Collections.Generic.List<ServiceReferenceMedAll.Doctor> DoctorsField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string PhoneNumerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Appointment Appointment
        {
            get
            {
                return this.AppointmentField;
            }
            set
            {
                this.AppointmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedAll.Doctor> Doctors
        {
            get
            {
                return this.DoctorsField;
            }
            set
            {
                this.DoctorsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumer
        {
            get
            {
                return this.PhoneNumerField;
            }
            set
            {
                this.PhoneNumerField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Appointment : object
    {
        
        private string DateField;
        
        private ServiceReferenceMedAll.Doctor DoctorField;
        
        private int IdField;
        
        private ServiceReferenceMedAll.Patient PatientField;
        
        private ServiceReferenceMedAll.Room RoomField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Doctor Doctor
        {
            get
            {
                return this.DoctorField;
            }
            set
            {
                this.DoctorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Patient Patient
        {
            get
            {
                return this.PatientField;
            }
            set
            {
                this.PatientField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Room Room
        {
            get
            {
                return this.RoomField;
            }
            set
            {
                this.RoomField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Doctor : object
    {
        
        private ServiceReferenceMedAll.Appointment AppointmentField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private System.Collections.Generic.List<ServiceReferenceMedAll.Patient> PatientsField;
        
        private string PhoneNumberField;
        
        private System.Collections.Generic.List<ServiceReferenceMedAll.Room> RoomsField;
        
        private string SpecializationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Appointment Appointment
        {
            get
            {
                return this.AppointmentField;
            }
            set
            {
                this.AppointmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedAll.Patient> Patients
        {
            get
            {
                return this.PatientsField;
            }
            set
            {
                this.PatientsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                this.PhoneNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedAll.Room> Rooms
        {
            get
            {
                return this.RoomsField;
            }
            set
            {
                this.RoomsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialization
        {
            get
            {
                return this.SpecializationField;
            }
            set
            {
                this.SpecializationField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Room : object
    {
        
        private ServiceReferenceMedAll.Appointment AppointmentField;
        
        private System.Collections.Generic.List<ServiceReferenceMedAll.Doctor> DoctorsField;
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Appointment Appointment
        {
            get
            {
                return this.AppointmentField;
            }
            set
            {
                this.AppointmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedAll.Doctor> Doctors
        {
            get
            {
                return this.DoctorsField;
            }
            set
            {
                this.DoctorsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class User : object
    {
        
        private string EmailField;
        
        private int IdField;
        
        private string PasswordField;
        
        private ServiceReferenceMedAll.Role RoleField;
        
        private int RoleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMedAll.Role Role
        {
            get
            {
                return this.RoleField;
            }
            set
            {
                this.RoleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId
        {
            get
            {
                return this.RoleIdField;
            }
            set
            {
                this.RoleIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Role : object
    {
        
        private int IdField;
        
        private string NameField;
        
        private System.Collections.Generic.List<ServiceReferenceMedAll.User> UsersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMedAll.User> Users
        {
            get
            {
                return this.UsersField;
            }
            set
            {
                this.UsersField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Admin : object
    {
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMedAll.IMedAllController")]
    public interface IMedAllController
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddPatient", ReplyAction="http://tempuri.org/IMedAllController/AddPatientResponse")]
        System.Threading.Tasks.Task AddPatientAsync(ServiceReferenceMedAll.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllPatients", ReplyAction="http://tempuri.org/IMedAllController/GetAllPatientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Patient>> GetAllPatientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetPatient", ReplyAction="http://tempuri.org/IMedAllController/GetPatientResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedAll.Patient> GetPatientAsync(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddDoctor", ReplyAction="http://tempuri.org/IMedAllController/AddDoctorResponse")]
        System.Threading.Tasks.Task AddDoctorAsync(ServiceReferenceMedAll.Doctor doctor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllDoctors", ReplyAction="http://tempuri.org/IMedAllController/GetAllDoctorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Doctor>> GetAllDoctorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetDoctorRooms", ReplyAction="http://tempuri.org/IMedAllController/GetDoctorRoomsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Room>> GetDoctorRoomsAsync(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetRoom", ReplyAction="http://tempuri.org/IMedAllController/GetRoomResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedAll.Room> GetRoomAsync(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetDoctor", ReplyAction="http://tempuri.org/IMedAllController/GetDoctorResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedAll.Doctor> GetDoctorAsync(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddUser", ReplyAction="http://tempuri.org/IMedAllController/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(ServiceReferenceMedAll.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetUser", ReplyAction="http://tempuri.org/IMedAllController/GetUserResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedAll.User> GetUserAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetUserRole", ReplyAction="http://tempuri.org/IMedAllController/GetUserRoleResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMedAll.Role> GetUserRoleAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/UpdateUserPassword", ReplyAction="http://tempuri.org/IMedAllController/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task UpdateUserPasswordAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddRole", ReplyAction="http://tempuri.org/IMedAllController/AddRoleResponse")]
        System.Threading.Tasks.Task AddRoleAsync(ServiceReferenceMedAll.Role role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddAdmin", ReplyAction="http://tempuri.org/IMedAllController/AddAdminResponse")]
        System.Threading.Tasks.Task AddAdminAsync(ServiceReferenceMedAll.Admin admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddAppointment", ReplyAction="http://tempuri.org/IMedAllController/AddAppointmentResponse")]
        System.Threading.Tasks.Task AddAppointmentAsync(ServiceReferenceMedAll.Appointment app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllAppointments", ReplyAction="http://tempuri.org/IMedAllController/GetAllAppointmentsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Appointment>> GetAllAppointmentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMedAllControllerChannel : ServiceReferenceMedAll.IMedAllController, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MedAllControllerClient : System.ServiceModel.ClientBase<ServiceReferenceMedAll.IMedAllController>, ServiceReferenceMedAll.IMedAllController
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MedAllControllerClient() : 
                base(MedAllControllerClient.GetDefaultBinding(), MedAllControllerClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IMedAll.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MedAllControllerClient(EndpointConfiguration endpointConfiguration) : 
                base(MedAllControllerClient.GetBindingForEndpoint(endpointConfiguration), MedAllControllerClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MedAllControllerClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MedAllControllerClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MedAllControllerClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MedAllControllerClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MedAllControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task AddPatientAsync(ServiceReferenceMedAll.Patient patient)
        {
            return base.Channel.AddPatientAsync(patient);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Patient>> GetAllPatientsAsync()
        {
            return base.Channel.GetAllPatientsAsync();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedAll.Patient> GetPatientAsync(string searchString)
        {
            return base.Channel.GetPatientAsync(searchString);
        }
        
        public System.Threading.Tasks.Task AddDoctorAsync(ServiceReferenceMedAll.Doctor doctor)
        {
            return base.Channel.AddDoctorAsync(doctor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Doctor>> GetAllDoctorsAsync()
        {
            return base.Channel.GetAllDoctorsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Room>> GetDoctorRoomsAsync(string searchString)
        {
            return base.Channel.GetDoctorRoomsAsync(searchString);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedAll.Room> GetRoomAsync(string searchString)
        {
            return base.Channel.GetRoomAsync(searchString);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedAll.Doctor> GetDoctorAsync(string searchString)
        {
            return base.Channel.GetDoctorAsync(searchString);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(ServiceReferenceMedAll.User user)
        {
            return base.Channel.AddUserAsync(user);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedAll.User> GetUserAsync(string email, string password)
        {
            return base.Channel.GetUserAsync(email, password);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMedAll.Role> GetUserRoleAsync(string email, string password)
        {
            return base.Channel.GetUserRoleAsync(email, password);
        }
        
        public System.Threading.Tasks.Task UpdateUserPasswordAsync(string email, string password)
        {
            return base.Channel.UpdateUserPasswordAsync(email, password);
        }
        
        public System.Threading.Tasks.Task AddRoleAsync(ServiceReferenceMedAll.Role role)
        {
            return base.Channel.AddRoleAsync(role);
        }
        
        public System.Threading.Tasks.Task AddAdminAsync(ServiceReferenceMedAll.Admin admin)
        {
            return base.Channel.AddAdminAsync(admin);
        }
        
        public System.Threading.Tasks.Task AddAppointmentAsync(ServiceReferenceMedAll.Appointment app)
        {
            return base.Channel.AddAppointmentAsync(app);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMedAll.Appointment>> GetAllAppointmentsAsync()
        {
            return base.Channel.GetAllAppointmentsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMedAll))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IMedAll))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/PC");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MedAllControllerClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IMedAll);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MedAllControllerClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IMedAll);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IMedAll,
        }
    }
}
