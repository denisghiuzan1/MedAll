//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedAll
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Patient : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MedAll.Appointment AppointmentField;
        
        private MedAll.Doctor[] DoctorsField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string PhoneNumerField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Appointment Appointment
        {
            get
            {
                return this.AppointmentField;
            }
            set
            {
                this.AppointmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Doctor[] Doctors
        {
            get
            {
                return this.DoctorsField;
            }
            set
            {
                this.DoctorsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumer
        {
            get
            {
                return this.PhoneNumerField;
            }
            set
            {
                this.PhoneNumerField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Appointment : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DateField;
        
        private MedAll.Doctor DoctorField;
        
        private int IdField;
        
        private MedAll.Patient PatientField;
        
        private MedAll.Room RoomField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Doctor Doctor
        {
            get
            {
                return this.DoctorField;
            }
            set
            {
                this.DoctorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Patient Patient
        {
            get
            {
                return this.PatientField;
            }
            set
            {
                this.PatientField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Room Room
        {
            get
            {
                return this.RoomField;
            }
            set
            {
                this.RoomField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Doctor", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Doctor : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MedAll.Appointment AppointmentField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private MedAll.Patient[] PatientsField;
        
        private string PhoneNumberField;
        
        private MedAll.Room[] RoomsField;
        
        private string SpecializationField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Appointment Appointment
        {
            get
            {
                return this.AppointmentField;
            }
            set
            {
                this.AppointmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Patient[] Patients
        {
            get
            {
                return this.PatientsField;
            }
            set
            {
                this.PatientsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                this.PhoneNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Room[] Rooms
        {
            get
            {
                return this.RoomsField;
            }
            set
            {
                this.RoomsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Specialization
        {
            get
            {
                return this.SpecializationField;
            }
            set
            {
                this.SpecializationField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private MedAll.Appointment AppointmentField;
        
        private MedAll.Doctor[] DoctorsField;
        
        private int IdField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Appointment Appointment
        {
            get
            {
                return this.AppointmentField;
            }
            set
            {
                this.AppointmentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Doctor[] Doctors
        {
            get
            {
                return this.DoctorsField;
            }
            set
            {
                this.DoctorsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string EmailField;
        
        private int IdField;
        
        private string PasswordField;
        
        private MedAll.Role RoleField;
        
        private int RoleIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password
        {
            get
            {
                return this.PasswordField;
            }
            set
            {
                this.PasswordField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.Role Role
        {
            get
            {
                return this.RoleField;
            }
            set
            {
                this.RoleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId
        {
            get
            {
                return this.RoleIdField;
            }
            set
            {
                this.RoleIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Role : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string NameField;
        
        private MedAll.User[] UsersField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MedAll.User[] Users
        {
            get
            {
                return this.UsersField;
            }
            set
            {
                this.UsersField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/MedAll")]
    public partial class Admin : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IMedAllController")]
public interface IMedAllController
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddPatient", ReplyAction="http://tempuri.org/IMedAllController/AddPatientResponse")]
    void AddPatient(MedAll.Patient patient);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddPatient", ReplyAction="http://tempuri.org/IMedAllController/AddPatientResponse")]
    System.Threading.Tasks.Task AddPatientAsync(MedAll.Patient patient);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllPatients", ReplyAction="http://tempuri.org/IMedAllController/GetAllPatientsResponse")]
    MedAll.Patient[] GetAllPatients();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllPatients", ReplyAction="http://tempuri.org/IMedAllController/GetAllPatientsResponse")]
    System.Threading.Tasks.Task<MedAll.Patient[]> GetAllPatientsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetPatient", ReplyAction="http://tempuri.org/IMedAllController/GetPatientResponse")]
    MedAll.Patient GetPatient(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetPatient", ReplyAction="http://tempuri.org/IMedAllController/GetPatientResponse")]
    System.Threading.Tasks.Task<MedAll.Patient> GetPatientAsync(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddDoctor", ReplyAction="http://tempuri.org/IMedAllController/AddDoctorResponse")]
    void AddDoctor(MedAll.Doctor doctor);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddDoctor", ReplyAction="http://tempuri.org/IMedAllController/AddDoctorResponse")]
    System.Threading.Tasks.Task AddDoctorAsync(MedAll.Doctor doctor);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllDoctors", ReplyAction="http://tempuri.org/IMedAllController/GetAllDoctorsResponse")]
    MedAll.Doctor[] GetAllDoctors();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllDoctors", ReplyAction="http://tempuri.org/IMedAllController/GetAllDoctorsResponse")]
    System.Threading.Tasks.Task<MedAll.Doctor[]> GetAllDoctorsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetDoctorRooms", ReplyAction="http://tempuri.org/IMedAllController/GetDoctorRoomsResponse")]
    MedAll.Room[] GetDoctorRooms(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetDoctorRooms", ReplyAction="http://tempuri.org/IMedAllController/GetDoctorRoomsResponse")]
    System.Threading.Tasks.Task<MedAll.Room[]> GetDoctorRoomsAsync(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetRoom", ReplyAction="http://tempuri.org/IMedAllController/GetRoomResponse")]
    MedAll.Room GetRoom(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetRoom", ReplyAction="http://tempuri.org/IMedAllController/GetRoomResponse")]
    System.Threading.Tasks.Task<MedAll.Room> GetRoomAsync(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetDoctor", ReplyAction="http://tempuri.org/IMedAllController/GetDoctorResponse")]
    MedAll.Doctor GetDoctor(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetDoctor", ReplyAction="http://tempuri.org/IMedAllController/GetDoctorResponse")]
    System.Threading.Tasks.Task<MedAll.Doctor> GetDoctorAsync(string searchString);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddUser", ReplyAction="http://tempuri.org/IMedAllController/AddUserResponse")]
    void AddUser(MedAll.User user);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddUser", ReplyAction="http://tempuri.org/IMedAllController/AddUserResponse")]
    System.Threading.Tasks.Task AddUserAsync(MedAll.User user);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetUser", ReplyAction="http://tempuri.org/IMedAllController/GetUserResponse")]
    MedAll.User GetUser(string email, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetUser", ReplyAction="http://tempuri.org/IMedAllController/GetUserResponse")]
    System.Threading.Tasks.Task<MedAll.User> GetUserAsync(string email, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetUserRole", ReplyAction="http://tempuri.org/IMedAllController/GetUserRoleResponse")]
    MedAll.Role GetUserRole(string email, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetUserRole", ReplyAction="http://tempuri.org/IMedAllController/GetUserRoleResponse")]
    System.Threading.Tasks.Task<MedAll.Role> GetUserRoleAsync(string email, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/UpdateUserPassword", ReplyAction="http://tempuri.org/IMedAllController/UpdateUserPasswordResponse")]
    void UpdateUserPassword(string email, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/UpdateUserPassword", ReplyAction="http://tempuri.org/IMedAllController/UpdateUserPasswordResponse")]
    System.Threading.Tasks.Task UpdateUserPasswordAsync(string email, string password);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddRole", ReplyAction="http://tempuri.org/IMedAllController/AddRoleResponse")]
    void AddRole(MedAll.Role role);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddRole", ReplyAction="http://tempuri.org/IMedAllController/AddRoleResponse")]
    System.Threading.Tasks.Task AddRoleAsync(MedAll.Role role);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddAdmin", ReplyAction="http://tempuri.org/IMedAllController/AddAdminResponse")]
    void AddAdmin(MedAll.Admin admin);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddAdmin", ReplyAction="http://tempuri.org/IMedAllController/AddAdminResponse")]
    System.Threading.Tasks.Task AddAdminAsync(MedAll.Admin admin);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddAppointment", ReplyAction="http://tempuri.org/IMedAllController/AddAppointmentResponse")]
    void AddAppointment(MedAll.Appointment app);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/AddAppointment", ReplyAction="http://tempuri.org/IMedAllController/AddAppointmentResponse")]
    System.Threading.Tasks.Task AddAppointmentAsync(MedAll.Appointment app);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllAppointments", ReplyAction="http://tempuri.org/IMedAllController/GetAllAppointmentsResponse")]
    MedAll.Appointment[] GetAllAppointments();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedAllController/GetAllAppointments", ReplyAction="http://tempuri.org/IMedAllController/GetAllAppointmentsResponse")]
    System.Threading.Tasks.Task<MedAll.Appointment[]> GetAllAppointmentsAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMedAllControllerChannel : IMedAllController, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MedAllControllerClient : System.ServiceModel.ClientBase<IMedAllController>, IMedAllController
{
    
    public MedAllControllerClient()
    {
    }
    
    public MedAllControllerClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MedAllControllerClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MedAllControllerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MedAllControllerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public void AddPatient(MedAll.Patient patient)
    {
        base.Channel.AddPatient(patient);
    }
    
    public System.Threading.Tasks.Task AddPatientAsync(MedAll.Patient patient)
    {
        return base.Channel.AddPatientAsync(patient);
    }
    
    public MedAll.Patient[] GetAllPatients()
    {
        return base.Channel.GetAllPatients();
    }
    
    public System.Threading.Tasks.Task<MedAll.Patient[]> GetAllPatientsAsync()
    {
        return base.Channel.GetAllPatientsAsync();
    }
    
    public MedAll.Patient GetPatient(string searchString)
    {
        return base.Channel.GetPatient(searchString);
    }
    
    public System.Threading.Tasks.Task<MedAll.Patient> GetPatientAsync(string searchString)
    {
        return base.Channel.GetPatientAsync(searchString);
    }
    
    public void AddDoctor(MedAll.Doctor doctor)
    {
        base.Channel.AddDoctor(doctor);
    }
    
    public System.Threading.Tasks.Task AddDoctorAsync(MedAll.Doctor doctor)
    {
        return base.Channel.AddDoctorAsync(doctor);
    }
    
    public MedAll.Doctor[] GetAllDoctors()
    {
        return base.Channel.GetAllDoctors();
    }
    
    public System.Threading.Tasks.Task<MedAll.Doctor[]> GetAllDoctorsAsync()
    {
        return base.Channel.GetAllDoctorsAsync();
    }
    
    public MedAll.Room[] GetDoctorRooms(string searchString)
    {
        return base.Channel.GetDoctorRooms(searchString);
    }
    
    public System.Threading.Tasks.Task<MedAll.Room[]> GetDoctorRoomsAsync(string searchString)
    {
        return base.Channel.GetDoctorRoomsAsync(searchString);
    }
    
    public MedAll.Room GetRoom(string searchString)
    {
        return base.Channel.GetRoom(searchString);
    }
    
    public System.Threading.Tasks.Task<MedAll.Room> GetRoomAsync(string searchString)
    {
        return base.Channel.GetRoomAsync(searchString);
    }
    
    public MedAll.Doctor GetDoctor(string searchString)
    {
        return base.Channel.GetDoctor(searchString);
    }
    
    public System.Threading.Tasks.Task<MedAll.Doctor> GetDoctorAsync(string searchString)
    {
        return base.Channel.GetDoctorAsync(searchString);
    }
    
    public void AddUser(MedAll.User user)
    {
        base.Channel.AddUser(user);
    }
    
    public System.Threading.Tasks.Task AddUserAsync(MedAll.User user)
    {
        return base.Channel.AddUserAsync(user);
    }
    
    public MedAll.User GetUser(string email, string password)
    {
        return base.Channel.GetUser(email, password);
    }
    
    public System.Threading.Tasks.Task<MedAll.User> GetUserAsync(string email, string password)
    {
        return base.Channel.GetUserAsync(email, password);
    }
    
    public MedAll.Role GetUserRole(string email, string password)
    {
        return base.Channel.GetUserRole(email, password);
    }
    
    public System.Threading.Tasks.Task<MedAll.Role> GetUserRoleAsync(string email, string password)
    {
        return base.Channel.GetUserRoleAsync(email, password);
    }
    
    public void UpdateUserPassword(string email, string password)
    {
        base.Channel.UpdateUserPassword(email, password);
    }
    
    public System.Threading.Tasks.Task UpdateUserPasswordAsync(string email, string password)
    {
        return base.Channel.UpdateUserPasswordAsync(email, password);
    }
    
    public void AddRole(MedAll.Role role)
    {
        base.Channel.AddRole(role);
    }
    
    public System.Threading.Tasks.Task AddRoleAsync(MedAll.Role role)
    {
        return base.Channel.AddRoleAsync(role);
    }
    
    public void AddAdmin(MedAll.Admin admin)
    {
        base.Channel.AddAdmin(admin);
    }
    
    public System.Threading.Tasks.Task AddAdminAsync(MedAll.Admin admin)
    {
        return base.Channel.AddAdminAsync(admin);
    }
    
    public void AddAppointment(MedAll.Appointment app)
    {
        base.Channel.AddAppointment(app);
    }
    
    public System.Threading.Tasks.Task AddAppointmentAsync(MedAll.Appointment app)
    {
        return base.Channel.AddAppointmentAsync(app);
    }
    
    public MedAll.Appointment[] GetAllAppointments()
    {
        return base.Channel.GetAllAppointments();
    }
    
    public System.Threading.Tasks.Task<MedAll.Appointment[]> GetAllAppointmentsAsync()
    {
        return base.Channel.GetAllAppointmentsAsync();
    }
}
